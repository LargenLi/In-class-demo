---
title: "Data Cleaning & Feature Engineering"
format: html
---

```{r}
library(readxl)
library(tidyverse)
library(stringr)
library(caret)

```

```{r}
df = read_excel("C:\\Users\\17172\\Downloads\\Telco_customer_churn.xlsx")
```

```{r}
colnames(df) = gsub(" ", "_", tolower(colnames(df)))
df = df |> select(-c('churn_reason', 'customerid', 'count', 'country', 'city', 'zip_code', 'lat_long', 'latitude', 'longitude', 'churn_label', 'churn_score'))


missing_summary = sapply(df, function(x) sum(is.na(x)))
print(missing_summary)
df = na.omit(df)
```


```{r}

df = df |>
  mutate(avg_monthly_charge = ifelse(tenure_months == 0, 0, total_charges / tenure_months))

# Flag customers with multiple services
df = df |>
  mutate(multiple_services = ifelse((phone_service == "Yes" & internet_service != "No"), 1, 0))
```
```{r}
# Columns with 'Yes' and 'No' value.
df = df |>
  mutate(across(where(is.character), ~ ifelse(str_starts(., "No"), "No", .)))

colnames(df) = str_trim(colnames(df))

yes_no_cols = df |>
  select(where(is.character)) |>
  select(where(~ all(.x %in% c("Yes", "No")))) |>
  colnames()

df = df |>
  mutate(across(all_of(yes_no_cols), ~ ifelse(. == "Yes", 1, 0)))
```

```{r}
df = df |>
  mutate(across(where(is.character), as.factor))

df = df |>
  select(where(~ n_distinct(.) > 1))

dummies = dummyVars(~ ., data = df)
df_encoded = predict(dummies, newdata = df) |> as.data.frame()

```

```{r}
numeric_cols_to_scale = df_encoded |>
  select(where(is.numeric)) |>
  select(where(~ n_distinct(.) > 2)) |>
  colnames()


preproc = preProcess(df_encoded[, numeric_cols_to_scale], method = c("center", "scale"))
scaled_numeric = predict(preproc, df_encoded[, numeric_cols_to_scale])

df_final = df_encoded
df_final[, numeric_cols_to_scale] = scaled_numeric
```

```{r}
# write.csv(df_final, "cleaned_telco_data.csv", row.names = FALSE)
```

